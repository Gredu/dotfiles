###########################
#  Configuration
###########################

# use 256 term for pretty colors
set -g default-terminal "xterm-256color"
set -g terminal-overrides 'xterm:colors=256'

# increase scroll-back history
set -g history-limit 5000

# use vim key bindings
setw -g mode-keys vi

# disable mouse
# setw -g mode-mouse off

# decrease command delay (increases vim responsiveness)
set -sg escape-time 0

# increase repeat time for repeatable commands
set -g repeat-time 1000

# start window index at 1
set -g base-index 1

# start pane index at 1
setw -g pane-base-index 1

# highlight window when it has new activity
setw -g monitor-activity on
set -g visual-activity on

# re-number windows when one is closed
# set -g renumber-windows on

# enable pbcopy and pbpaste
# https://github.com/ChrisJohnsen/tmux-MacOSX-pasteboard/blob/master/README.md
# set-option -g default-command "reattach-to-user-namespace -l zsh"


###########################
#  Key Bindings
###########################

# copymode
bind b copy-mode

# copy with 'enter' or 'y' and send to mac os clipboard: http://goo.gl/2Bfn8
# unbind -t vi-copy Enter
# bind-key -t vi-copy Enter copy-pipe "reattach-to-user-namespace pbcopy"
# bind-key -t vi-copy y copy-pipe "reattach-to-user-namespace pbcopy"

# create 'v' alias for selecting text
bind-key -t vi-copy v begin-selection

# paste
unbind C-p
bind C-p paste-buffer

# window splitting
unbind %
bind v split-window -h
unbind '"'
bind s split-window -v

# quickly switch panes
unbind ^J
bind ^J select-pane -t :.+

# force a reload of the config file
unbind r
bind r source-file ~/.tmux.conf \; display "Reloaded!"

# prefixless movement with alt
bind -n M-v split-window -h
bind -n M-s split-window -v
bind -n M-j next-window
bind -n M-k previous-window
bind -n M-c new-window
bind -n M-w choose-window


###########################
# Status Bar
###########################

set -g status off

# enable UTF-8 support in status bar
# set -g status-utf8 on

# set refresh interval for status bar
set -g status-interval 30

# center the status bar
set -g status-justify left

# show session, window, pane in left status bar
set -g status-left-length 40
set -g status-left '#[fg=green]#S#[fg=blue] #I:#P#[default] '

# show hostname, date, time, and battery in right status bar
set-option -g status-right '#[fg=green]#H#[default] %d%m %I%M'
# [fg=red]#(battery discharging)#[default]#(battery charging)'


###########################
# Colors
###########################

# color status bar
set -g status-bg colour235
set -g status-fg white

# highlight current window
set-window-option -g window-status-current-fg black
set-window-option -g window-status-current-bg green

# set color of active pane
set -g pane-border-fg colour235
set -g pane-border-bg black
set -g pane-active-border-fg colour166
set -g pane-active-border-bg default

# active window title colors
set-window-option -g window-status-current-fg colour166 #orange
set-window-option -g window-status-current-bg colour234

# default window title colors
set-window-option -g window-status-fg colour239
set-window-option -g window-status-bg colour235
set-window-option -g window-status-attr dim


###########################
# Vim conf
###########################

# Smart pane switching with awareness of vim splits
is_vim='echo "#{pane_current_command}" | grep -iqE "(^|\/)g?(view|n?vim?)(diff)?$"'
bind -n C-h if-shell "$is_vim" "send-keys C-h" "select-pane -L"
bind -n C-j if-shell "$is_vim" "send-keys C-j" "select-pane -D"
bind -n C-k if-shell "$is_vim" "send-keys C-k" "select-pane -U"
bind -n C-l if-shell "$is_vim" "send-keys C-l" "select-pane -R"
bind -n C-\ if-shell "$is_vim" "send-keys C-\\" "select-pane -l"
